import{w as e,b as p,j as r}from"./iframe-DcUCz3Gq.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-CQC0Jca3.js";import{G as n}from"./Group-qWIgZiP3.js";import{a as c,C as u}from"./Cell-DMi1jj6D.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-DaoVSz36.js";import"./Clickable-8ToLJd_t.js";import"./useFocusVisible-wT17JwXD.js";import"./useFocusVisibleClassName-CIfEo8ba.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-FhxxxNM2.js";import"./useColorScheme-DrgIsgMO.js";import"./InputUtils-Dt7ctke5.js";import"./useFocusWithin-4tbXXtmK.js";import"./useIsClient-blsjwI61.js";import"./useConfigDirection-BglQDqbm.js";import"./online_mobile_12-DF9nx8OV.js";import"./SvgIconRootV2-CiN65TpX.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-lAEBSvha.js";import"./Removable-Bl3ntWOu.js";import"./children-DDwVHqk6.js";import"./IconButton-CGiS95Aa.js";import"./Tappable-CGnYgxpx.js";import"./VisuallyHidden-IsgabQ9w.js";import"./useGlobalEventListener-JEtPNfzN.js";import"./useEventListener-D25pA6Ua.js";import"./cancel_24-DyhNO7vT.js";import"./SimpleCell-D963dulm.js";import"./Headline-_bBT78y6.js";import"./Subhead-CcORohtB.js";import"./chevron_compact_right_24-C6YK1MYa.js";import"./chevron_16-BE6lGA5Q.js";import"./AdaptiveIconRenderer-D8fi58IV.js";import"./reorder_ios_24-B8zIQhue.js";import"./check_box_on_24-CBAEM01i.js";import"./check_circle_on_24-UsLiUqKd.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
